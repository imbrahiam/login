/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package loginproject;

import com.formdev.flatlaf.FlatIntelliJLaf;
import javax.swing.*;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.TableModel;
import java.util.List;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.SwingConstants;
import javax.swing.UIManager;
import javax.swing.UnsupportedLookAndFeelException;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author brahiam
 */
public class Management extends javax.swing.JFrame {

    /**
     * Creates new form Management
     */
    private static Management single_instance = null;

    public static Usuario activeSession;
    private static int count = 0;
    
    private Management() {
        initComponents();
        sessionUser.setText(activeSession.getUsername());
        sessionUser.setHorizontalAlignment(SwingConstants.CENTER);
        sessionUser.setVerticalAlignment(SwingConstants.CENTER);
        sessionUser.setVisible(true);
        load();
    }

    public static Management Singleton() {
        return new Management();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        Container = new javax.swing.JPanel();
        ScrollPane = new javax.swing.JScrollPane();
        Table = new javax.swing.JTable();
        Back = new javax.swing.JLabel();
        Logo = new javax.swing.JLabel();
        sessionUser = new javax.swing.JLabel();
        Firma = new javax.swing.JLabel();
        create = new javax.swing.JButton();
        Logout = new javax.swing.JLabel();
        update = new javax.swing.JButton();
        delete = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);
        setSize(new java.awt.Dimension(800, 600));

        Container.setPreferredSize(new java.awt.Dimension(800, 600));

        Table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Usuario", "Nombre", "Apellido", "Teléfono", "Email"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        Table.getTableHeader().setResizingAllowed(false);
        Table.getTableHeader().setReorderingAllowed(false);
        ScrollPane.setViewportView(Table);

        Back.setForeground(new java.awt.Color(53, 133, 250));
        Back.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        Back.setText("← Cerrar sesión");
        Back.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        Back.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                BackMouseClicked(evt);
            }
        });

        Logo.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        Logo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/loginproject/Icon/log.png"))); // NOI18N
        Logo.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));

        sessionUser.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        sessionUser.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);

        Firma.setFont(new java.awt.Font("Segoe UI Light", 0, 12)); // NOI18N
        Firma.setText("Brahiam ™");
        Firma.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        Firma.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));

        create.setText("Nuevo");
        create.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        create.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                createActionPerformed(evt);
            }
        });

        Logout.setIcon(new javax.swing.ImageIcon(getClass().getResource("/loginproject/Icon/logout.png"))); // NOI18N
        Logout.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        Logout.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                LogoutMouseClicked(evt);
            }
        });

        update.setText("Actualizar");
        update.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        update.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateActionPerformed(evt);
            }
        });

        delete.setText("Eliminar");
        delete.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        delete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout ContainerLayout = new javax.swing.GroupLayout(Container);
        Container.setLayout(ContainerLayout);
        ContainerLayout.setHorizontalGroup(
            ContainerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ContainerLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(ContainerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(ContainerLayout.createSequentialGroup()
                        .addGap(100, 100, 100)
                        .addComponent(create, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(117, 117, 117)
                        .addComponent(update, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(delete, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(100, 100, 100))
                    .addGroup(ContainerLayout.createSequentialGroup()
                        .addComponent(ScrollPane)
                        .addContainerGap())
                    .addGroup(ContainerLayout.createSequentialGroup()
                        .addComponent(Firma)
                        .addGap(297, 297, 297)
                        .addGroup(ContainerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(Back)
                            .addGroup(ContainerLayout.createSequentialGroup()
                                .addGap(8, 8, 8)
                                .addComponent(Logout)))
                        .addGap(361, 361, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, ContainerLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(Logo)
                        .addGap(339, 339, 339))))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, ContainerLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(sessionUser, javax.swing.GroupLayout.PREFERRED_SIZE, 400, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(198, 198, 198))
        );
        ContainerLayout.setVerticalGroup(
            ContainerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ContainerLayout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addComponent(Logo)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(sessionUser, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(ScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 244, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(ContainerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(create)
                    .addComponent(update)
                    .addComponent(delete))
                .addGroup(ContainerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(ContainerLayout.createSequentialGroup()
                        .addGap(32, 32, 32)
                        .addComponent(Logout)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 14, Short.MAX_VALUE)
                        .addComponent(Firma)
                        .addContainerGap())
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, ContainerLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(Back)
                        .addGap(22, 22, 22))))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(Container, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(Container, javax.swing.GroupLayout.DEFAULT_SIZE, 602, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void BackMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_BackMouseClicked
        this.dispose();
        HandlerMethods.Home();
    }//GEN-LAST:event_BackMouseClicked


    private void createActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_createActionPerformed

        this.dispose();
        HandlerMethods.SignUpFromManagement();
    }//GEN-LAST:event_createActionPerformed

    private void LogoutMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_LogoutMouseClicked
        this.dispose();
        HandlerMethods.Home();
    }//GEN-LAST:event_LogoutMouseClicked

    private void updateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateActionPerformed

        int row = Table.getSelectedRow();

        boolean deleted = false;

        if (row > -1) {
            
            String username = Table.getModel().getValueAt(row, 0).toString();
            String nombre = Table.getModel().getValueAt(row, 1).toString();
            String apellido = Table.getModel().getValueAt(row, 2).toString();
            String phone = Table.getModel().getValueAt(row, 3).toString();
            String email = Table.getModel().getValueAt(row, 4).toString();
            
            Usuario selectedUser = new Usuario();
            
            selectedUser.setUsername(username);
            selectedUser.setNombre(nombre);
            selectedUser.setApellido(apellido);
            selectedUser.setPhone(phone);
            selectedUser.setEmail(email);
            
            this.dispose();
            HandlerMethods.Update(selectedUser);

            /*if (username.equals(activeSession.getUsername())) {
                
                JOptionPane.showMessageDialog(new JFrame(), "¡Lo sentimos " + activeSession.getUsername() + ", no puedes eliminar tu propia cuenta!", "", JOptionPane.INFORMATION_MESSAGE);

            } else {*/

            
            
            /*}*/
        }
        
        load();
        
    }//GEN-LAST:event_updateActionPerformed

    private void deleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteActionPerformed

        int row = Table.getSelectedRow();

        boolean deleted = false;

        if (row > -1) {
            
            String username = Table.getModel().getValueAt(row, 0).toString();

            if (username.equals(activeSession.getUsername()) || DatabaseHandler.getUsernameId(username) == activeSession.getId()) {
                
                JOptionPane.showMessageDialog(new JFrame(), "¡Lo sentimos " + activeSession.getUsername() + ", no puedes eliminar tu propia cuenta!", "", JOptionPane.INFORMATION_MESSAGE);

            } else {
                
                //System.out.println(username);

                deleted = DatabaseHandler.delete(username);

                if (deleted) {
                    
                    JOptionPane.showMessageDialog(new JFrame(), "¡" + username + " ha sido eliminado exitosamente!", "", JOptionPane.INFORMATION_MESSAGE);
                    load();
                } else {
                    JOptionPane.showMessageDialog(new JFrame(), "¡Error, " + username + " no pudo ser eliminiado!", "", JOptionPane.ERROR_MESSAGE);
                }
            }
        }

        /*
            getValueAt(int row, int column)
            getSelectedRow()
            getSelectedColumn()
         */
    }//GEN-LAST:event_deleteActionPerformed

    
    private void load() {
        DefaultTableModel model = new DefaultTableModel(new String[]{"Usuario", "Nombre", "Apellido", "Teléfono", "Email"}, 0);
        Table.setModel(model);

        List<Usuario> users = DatabaseHandler.getAll();

        for (Usuario user : users) {
            model.addRow(new Object[]{user.getUsername(), user.getNombre(), user.getApellido(), user.getPhone(), user.getEmail()});
        }
        
        setCellsAlignment(Table, SwingConstants.CENTER);
    }
    
    public static void setCellsAlignment(JTable table, int alignment)
    {
        DefaultTableCellRenderer rightRenderer = new DefaultTableCellRenderer();
        rightRenderer.setHorizontalAlignment(alignment);

        TableModel tableModel = table.getModel();

        for (int columnIndex = 0; columnIndex < tableModel.getColumnCount(); columnIndex++)
        {
            table.getColumnModel().getColumn(columnIndex).setCellRenderer(rightRenderer);
        }
    }

    public static void main(String args[]) {

        try {
            UIManager.setLookAndFeel(new FlatIntelliJLaf());
        } catch (UnsupportedLookAndFeelException ex) {

        }

        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Management().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel Back;
    private javax.swing.JPanel Container;
    private javax.swing.JLabel Firma;
    private javax.swing.JLabel Logo;
    private javax.swing.JLabel Logout;
    private javax.swing.JScrollPane ScrollPane;
    private javax.swing.JTable Table;
    private javax.swing.JButton create;
    private javax.swing.JButton delete;
    private javax.swing.JLabel sessionUser;
    private javax.swing.JButton update;
    // End of variables declaration//GEN-END:variables

    private boolean getSelectedRow() {
        throw new UnsupportedOperationException("Not supported yet."); // Generated from nbfs://nbhost/SystemFileSystem/Templates/Classes/Code/GeneratedMethodBody
    }
}
